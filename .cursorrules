# R√àGLES CURSOR - PROJET TRANSCRIPTION ADAPTATIVE
# ================================================

## üö´ R√àGLE FONDAMENTALE : Z√âRO VALEUR COD√âE EN DUR
### Tous les param√®tres DOIVENT √™tre calcul√©s et d√©couverts automatiquement

### ‚ùå INTERDICTIONS ABSOLUES :
- Aucune valeur num√©rique cod√©e en dur dans les algorithmes
- Aucun seuil fixe (threshold, silence_duration, speech_pad)
- Aucune constante magique sans justification calcul√©e
- Aucun param√®tre bas√© sur des suppositions ou des "bonnes pratiques"

### ‚úÖ OBLIGATIONS :
- Tous les param√®tres doivent √™tre calcul√©s √† partir de l'analyse audio
- Utiliser des formules adaptatives bas√©es sur les caract√©ristiques d√©tect√©es
- Impl√©menter des syst√®mes d'√©quilibrage et de normalisation
- Ajouter des bornes de s√©curit√© calcul√©es, pas arbitraires

## üìä M√âTHODOLOGIE ADAPTATIVE OBLIGATOIRE

### 1. ANALYSE AUDIO PR√âALABLE
- Analyser l'√©nergie, la dynamique, le spectre, les silences
- Calculer des statistiques robustes (percentiles, moyennes pond√©r√©es)
- D√©duire les caract√©ristiques du contenu audio

### 2. CALCUL DES PARAM√àTRES DE BASE
- Formules math√©matiques bas√©es sur les caract√©ristiques
- Normalisation et √©quilibrage automatiques
- √âviter les valeurs extr√™mes par des fonctions de lissage

### 3. G√âN√âRATION DE CANDIDATS
- Variations calcul√©es autour des valeurs de base
- Combinaisons syst√©matiques testables
- Scoring objectif pour s√©lection automatique

### 4. VALIDATION ET BORNES
- Bornes de s√©curit√© d√©riv√©es des caract√©ristiques audio
- Tests de coh√©rence entre param√®tres
- Pr√©vention des configurations absurdes

## üßÆ EXEMPLES DE CALCULS ADAPTATIFS CORRECTS

### Seuil VAD :
```python
# ‚úÖ CORRECT - Calcul√© selon l'√©nergie
energy_factor = np.sqrt(mean_energy / reference_energy)
base_threshold = reference_base * energy_factor
```

### Dur√©e de silence :
```python
# ‚úÖ CORRECT - Bas√© sur les percentiles d√©tect√©s
silence_stats = np.percentile(detected_silences, [25, 50, 75])
base_silence = int(0.3 * p25 + 0.5 * p50 + 0.2 * p75)
```

### Speech padding :
```python
# ‚úÖ CORRECT - Adapt√© √† la qualit√© spectrale
spectral_factor = spectral_centroid / spectral_reference
base_padding = int(base_value + (spectral_factor - 1.0) * adaptive_range)
```

## üö´ EXEMPLES INTERDITS

```python
# ‚ùå INTERDIT - Valeurs cod√©es en dur
threshold = 0.4
silence_duration = 200
speech_pad = 150

# ‚ùå INTERDIT - Conditions arbitraires
if mean_energy > 0.05:
    threshold = 0.5
elif mean_energy > 0.02:
    threshold = 0.4

# ‚ùå INTERDIT - Constantes magiques
candidates = [
    {'threshold': 0.3, 'silence': 150},  # D'o√π viennent ces valeurs ?
    {'threshold': 0.4, 'silence': 200},
]
```

## üéØ SYST√àME DE SCORING ADAPTATIF

### Crit√®res de qualit√© calcul√©s :
- Nombre de segments (plus = mieux, sauf sur-segmentation)
- Confiance moyenne (plus haute = mieux)
- Distribution des dur√©es (√©quilibr√©e = mieux)
- P√©nalit√©s pour segments trop longs/courts

### Fonction de scoring composite :
```python
# ‚úÖ Scoring enti√®rement calcul√©
base_score = segments_count * weight1 + confidence * weight2 + balance * weight3
final_score = base_score - penalties
```

## üîß R√àGLES D'AJUSTEMENT DYNAMIQUE

### Adaptation par chunk :
- Calculs bas√©s sur les ratios √©nerg√©tiques
- Ajustements proportionnels aux caract√©ristiques
- Facteurs d'adaptation calcul√©s, jamais fixes

### √âquilibrage automatique :
- Pr√©vention des valeurs extr√™mes par des fonctions math√©matiques
- Lissage par racines carr√©es ou logarithmes
- Bornes calcul√©es selon les caract√©ristiques globales

## üìù DOCUMENTATION OBLIGATOIRE

### Pour chaque param√®tre calcul√© :
- Expliquer la formule utilis√©e
- Justifier les facteurs de pond√©ration
- Documenter les bornes de s√©curit√©
- Indiquer les r√©f√©rences utilis√©es pour la normalisation

### Exemple de documentation :
```python
# Calcul du seuil adaptatif :
# - energy_factor = normalisation de l'√©nergie par rapport √† 0.05 (√©nergie de r√©f√©rence parole normale)
# - dynamic_factor = prise en compte de la plage dynamique (0.15 = r√©f√©rence conversation)
# - base_threshold centr√© sur 0.2 (valeur d'√©quilibre empirique)
# - bornes [0.15, 0.65] pour √©viter sur/sous-d√©tection
```

## üß™ TESTS ET VALIDATION

### V√©rifications automatiques :
- Tests sur diff√©rents types d'audio
- Validation des plages de param√®tres
- Comparaison avec r√©f√©rences connues
- D√©tection des r√©gressions de performance

### M√©triques de qualit√© :
- Pourcentage de segments par rapport √† la r√©f√©rence
- Temps de traitement
- Confiance moyenne
- Robustesse sur diff√©rents fichiers

## üéõÔ∏è CONFIGURATION ADAPTATIVE

### Structure des param√®tres :
```python
# ‚úÖ Structure adaptative compl√®te
adaptive_config = {
    'base_calculations': {
        'energy_reference': calculated_from_training_set,
        'spectral_reference': calculated_from_analysis,
        'silence_percentiles': [25, 50, 75]
    },
    'adaptation_factors': {
        'energy_smoothing': 'sqrt',  # Fonction de lissage
        'dynamic_range_factor': calculated_coefficient,
        'spectral_weight': calculated_weight
    },
    'safety_bounds': {
        'threshold_min': calculated_minimum,
        'threshold_max': calculated_maximum,
        'silence_min': calculated_from_duration,
        'silence_max': calculated_from_characteristics
    }
}
```

## üîç CONTR√îLE QUALIT√â

### Avant chaque commit :
1. V√©rifier qu'aucune valeur n'est cod√©e en dur
2. S'assurer que tous les param√®tres sont calcul√©s
3. Valider les formules d'adaptation
4. Tester sur plusieurs fichiers audio diff√©rents

### Code review checklist :
- [ ] Aucune constante magique
- [ ] Formules document√©es et justifi√©es
- [ ] Param√®tres adaptatifs bas√©s sur l'analyse
- [ ] Bornes de s√©curit√© calcul√©es
- [ ] Tests de robustesse inclus

## üí° PHILOSOPHIE DU PROJET

**"Un syst√®me vraiment intelligent d√©couvre ses param√®tres optimaux, il ne les suppose pas."**

Le but est de cr√©er un syst√®me de transcription qui s'adapte automatiquement √† n'importe quel type d'audio, sans intervention humaine ni ajustement manuel. Chaque param√®tre doit √™tre le r√©sultat d'un calcul justifi√©, pas d'une supposition ou d'une valeur "qui marche bien en g√©n√©ral". 